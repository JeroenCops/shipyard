[package]
name = "shipyard_bunny_demo"
version = "0.1.0"
edition = "2018"

[lib]
crate-type = ["cdylib"]

[dependencies]
rand = "0.8.5"
nalgebra = "0.28.0"
wasm-bindgen = "0.2.74"
js-sys = "0.3.51"
wasm-bindgen-futures = "0.4.24"
gloo-events = "0.1.1"
awsm_web = { version = "0.1.9", features = [
    "tick",
    "webgl",
    "loaders",
    "audio",
], default-features = false }
wee_alloc = { version = "0.4.5", optional = true }
wasm-logger = { version = "0.2.0", optional = true }
shipyard = { path = "../", features = [
    "proc",
    "thread_local",
], default-features = false }
cfg-if = "1.0.0"
log = "0.4.14"
lazy_static = "1.4.0"
getrandom = { version = "0.2.3", features = ["js"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

[dependencies.web-sys]
version = "0.3.46"
features = [
    "console",
    "MouseEvent",
    "Document",
    "Element",
    "HtmlAnchorElement",
    "HtmlElement",
    "HtmlButtonElement",
    "HtmlCanvasElement",
    "CssStyleDeclaration",
    "Node",
    "Window",
    "Performance",

]

[features]
default = ["wee_alloc"]
dev = ["wee_alloc", "wasm-logger", "console_error_panic_hook"]
